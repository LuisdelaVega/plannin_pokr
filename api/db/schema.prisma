datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.

model User {
  id                  String       @id @default(uuid())
  name                String?
  email               String       @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  rooms               UserInRoom[]
  createdRooms        Room[]
  votes               Vote[]
  createdAt           DateTime     @default(now())
  roles               String       @default("user") // Can be a comma separated list. Example: "user,admin"
}

model Room {
  id        String       @id @default(cuid())
  title     String
  players   UserInRoom[]
  createdAt DateTime     @default(now())
  createdBy User         @relation(fields: [userId], references: [id])
  userId    String // relation scalar field (used in the `@relation` attribute above)
  votes     Vote[]
}

model UserInRoom {
  room   Room   @relation(fields: [roomId], references: [id])
  roomId String // relation scalar field (used in the `@relation` attribute above)
  user   User   @relation(fields: [userId], references: [id])
  userId String // relation scalar field (used in the `@relation` attribute above)

  @@id([roomId, userId])
}

model Vote {
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String // relation scalar field (used in the `@relation` attribute above)
  user      User     @relation(fields: [userId], references: [id])
  userId    String // relation scalar field (used in the `@relation` attribute above)
  value     Int
  createdAt DateTime @default(now())

  @@id([roomId, userId])
}
